{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\This PC\\\\Desktop\\\\Task\\\\user\\\\src\\\\components\\\\UploadImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImage = () => {\n  _s();\n  const [image, setImage] = useState(\"\");\n  const convertToImage = e => {\n    console.log(e);\n    var reader = new FileReader();\n    reader.readAsDataURL(e.target.files[0]);\n    reader.onload = () => {\n      console.log(reader.result);\n      setImage(reader.result);\n    };\n    reader.onerror = error => {\n      console.log(\"Error\", error);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center\\r \",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      accept: \"image/*\",\n      type: \"file\",\n      onChange: convertToImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), image == \"\" || image == null ? \"\" : /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"w-[100px] h-100[px] ml-64\",\n      src: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadImage, \"kD9UrQSWR+ZcrmqWJjEkvApuaqw=\");\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadImage","_s","image","setImage","convertToImage","e","console","log","reader","FileReader","readAsDataURL","target","files","onload","result","onerror","error","className","children","accept","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["C:/Users/This PC/Desktop/Task/user/src/components/UploadImage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst UploadImage = () => {\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  const convertToImage = (e) => {\r\n    console.log(e);\r\n    var reader = new FileReader();\r\n    reader.readAsDataURL(e.target.files[0]);\r\n    reader.onload = () => {\r\n      console.log(reader.result);\r\n      setImage(reader.result);\r\n    };\r\n    reader.onerror = (error) => {\r\n      console.log(\"Error\", error);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"flex items-center\r\n    \"\r\n    >\r\n      <input accept=\"image/*\" type=\"file\" onChange={convertToImage} />\r\n      {image == \"\" || image == null ? (\r\n        \"\"\r\n      ) : (\r\n        <img className=\"w-[100px] h-100[px] ml-64\" src={image} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMO,cAAc,GAAIC,CAAC,IAAK;IAC5BC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IACd,IAAIG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC7BD,MAAM,CAACE,aAAa,CAACL,CAAC,CAACM,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACvCJ,MAAM,CAACK,MAAM,GAAG,MAAM;MACpBP,OAAO,CAACC,GAAG,CAACC,MAAM,CAACM,MAAM,CAAC;MAC1BX,QAAQ,CAACK,MAAM,CAACM,MAAM,CAAC;IACzB,CAAC;IACDN,MAAM,CAACO,OAAO,GAAIC,KAAK,IAAK;MAC1BV,OAAO,CAACC,GAAG,CAAC,OAAO,EAAES,KAAK,CAAC;IAC7B,CAAC;EACH,CAAC;EAED,oBACEjB,OAAA;IACEkB,SAAS,EAAC,sBACX;IAAAC,QAAA,gBAECnB,OAAA;MAAOoB,MAAM,EAAC,SAAS;MAACC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEjB;IAAe;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC/DvB,KAAK,IAAI,EAAE,IAAIA,KAAK,IAAI,IAAI,GAC3B,EAAE,gBAEFH,OAAA;MAAKkB,SAAS,EAAC,2BAA2B;MAACS,GAAG,EAAExB;IAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACzD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CA7BID,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AA+BjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}